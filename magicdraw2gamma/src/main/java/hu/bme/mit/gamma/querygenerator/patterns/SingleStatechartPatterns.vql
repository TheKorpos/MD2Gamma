package hu.bme.mit.gamma.querygenerator.patterns

import "http://www.mit.bme.hu/gamma/constraint/Model" 
import "http://www.mit.bme.hu/gamma/statechart/Model"

pattern simpleStatechartVariables(variable : VariableDeclaration) {
	// Simple statecharts
	neg find simpleInstances(_instance, statechart);
	StatechartDefinition.variableDeclarations(statechart, variable);
}

pattern simpleStatechartStates(region : Region, regionName : java String, state : State, stateName : java String) {
	neg find simpleInstances(_instance, statechart);
	StatechartDefinition.regions.stateNodes(statechart, state);
	find statesOfRegions(region, regionName, state, stateName);
} or {
	neg find simpleInstances(_instance, statechart);
	StatechartDefinition.regions.stateNodes(statechart, composite);
	find substatesOfCompositeState+(composite, state);
	find statesOfRegions(region, regionName, state, stateName);
}

private pattern statesOfRegions(region : Region, regionName : java String, state : State, stateName : java String) {
	State.name(state, stateName);
	Region.stateNodes(region, state);
	Region.name(region, regionName);
}